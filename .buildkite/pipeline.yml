# Nodes with values to reuse in the pipeline.
common_params:
  plugins: &common_plugins
    - automattic/a8c-ci-toolkit#3.3.0
    - automattic/nvm#0.3.0

# All current steps use the same agent and environment; we can define them as top-level
agents:
  queue: mac
env:
  IMAGE_ID: xcode-15.2

steps:
  - label: Lint
    key: lint
    command: |
      .buildkite/commands/install-node-dependencies.sh
      echo '--- :eslint: Lint'
      npm run lint
    agents:
      queue: default
    plugins: *common_plugins

  - label: Unit Tests
    key: unit_tests
    command: |
      .buildkite/commands/install-node-dependencies.sh
      echo '--- :npm: Run Unit Tests'
      npm run test
    agents:
      queue: default
    plugins: *common_plugins

  - label: 'ðŸ”¨ Create Dev Build'
    key: 'dev'
    command: |
      .buildkite/commands/prepare-environment.sh
      .buildkite/commands/install-node-dependencies.sh

      echo "--- :node: Building Binary"
      node ./scripts/prepare-dev-build-version.mjs
      npm run make:macos-x64
      npm run make:macos-arm64

      .buildkite/commands/post-process-binary-for-distribution.sh

      echo "--- ðŸš€ Distributing Binary"
      bundle exec fastlane distribute_dev_build

    plugins: *common_plugins
    artifact_paths:
      - 'out/*.app.zip'
    if: "build.branch == 'trunk' && build.tag !~ /^v[0-9]+/"

  - label: 'ðŸ”¨ Create Release Build'
    key: 'release'
    command: |
      .buildkite/commands/prepare-environment.sh
      .buildkite/commands/install-node-dependencies.sh

      echo "--- :node: Building Binary"
      node ./scripts/confirm-tag-matches-version.mjs
      npm run make:macos-x64
      npm run make:macos-arm64

      .buildkite/commands/post-process-binary-for-distribution.sh

      echo "--- ðŸš€ Distributing Binary"
      bundle exec fastlane distribute_release_build

    plugins: *common_plugins
    artifact_paths:
      - 'out/*.app.zip'
    if: "build.tag =~ /^v[0-9]+/"
