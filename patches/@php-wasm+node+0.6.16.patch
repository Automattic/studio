diff --git a/node_modules/@php-wasm/node/index.cjs b/node_modules/@php-wasm/node/index.cjs
index 1be4252..7f01cfd 100644
--- a/node_modules/@php-wasm/node/index.cjs
+++ b/node_modules/@php-wasm/node/index.cjs
@@ -6650,6 +6650,11 @@ function init(RuntimeName, PHPLoader) {
     doStat: function(func, path, buf) {
       try {
         var stat = func(path);
+        if (NODEFS.isWindows) {
+          // Node.js on Windows never represents permission bit 'x', so
+          // propagate read bits to execute bits.
+          stat.mode = stat.mode | (stat.mode & 292) >> 2;
+        }
       } catch (e) {
         if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
           return -54;
@@ -14280,6 +14285,11 @@ function init2(RuntimeName, PHPLoader) {
     doStat: function(func, path, buf) {
       try {
         var stat = func(path);
+        if (NODEFS.isWindows) {
+          // Node.js on Windows never represents permission bit 'x', so
+          // propagate read bits to execute bits.
+          stat.mode = stat.mode | (stat.mode & 292) >> 2;
+        }
       } catch (e) {
         if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
           return -54;
@@ -21910,6 +21920,11 @@ function init3(RuntimeName, PHPLoader) {
     doStat: function(func, path, buf) {
       try {
         var stat = func(path);
+        if (NODEFS.isWindows) {
+          // Node.js on Windows never represents permission bit 'x', so
+          // propagate read bits to execute bits.
+          stat.mode = stat.mode | (stat.mode & 292) >> 2;
+        }
       } catch (e) {
         if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
           return -54;
@@ -29535,6 +29550,11 @@ function init4(RuntimeName, PHPLoader) {
     doStat: function(func, path, buf) {
       try {
         var stat = func(path);
+        if (NODEFS.isWindows) {
+          // Node.js on Windows never represents permission bit 'x', so
+          // propagate read bits to execute bits.
+          stat.mode = stat.mode | (stat.mode & 292) >> 2;
+        }
       } catch (e) {
         if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
           return -54;
@@ -37133,6 +37153,11 @@ function init5(RuntimeName, PHPLoader) {
     doStat: function(func, path, buf) {
       try {
         var stat = func(path);
+        if (NODEFS.isWindows) {
+          // Node.js on Windows never represents permission bit 'x', so
+          // propagate read bits to execute bits.
+          stat.mode = stat.mode | (stat.mode & 292) >> 2;
+        }
       } catch (e) {
         if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
           return -54;
@@ -44716,6 +44741,11 @@ function init6(RuntimeName, PHPLoader) {
     doStat: function(func, path, buf) {
       try {
         var stat = func(path);
+        if (NODEFS.isWindows) {
+          // Node.js on Windows never represents permission bit 'x', so
+          // propagate read bits to execute bits.
+          stat.mode = stat.mode | (stat.mode & 292) >> 2;
+        }
       } catch (e) {
         if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
           return -54;
@@ -52294,6 +52324,11 @@ function init7(RuntimeName, PHPLoader) {
     doStat: function(func, path, buf) {
       try {
         var stat = func(path);
+        if (NODEFS.isWindows) {
+          // Node.js on Windows never represents permission bit 'x', so
+          // propagate read bits to execute bits.
+          stat.mode = stat.mode | (stat.mode & 292) >> 2;
+        }
       } catch (e) {
         if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
           return -54;
@@ -59740,6 +59775,11 @@ function init8(RuntimeName, PHPLoader) {
     doStat: function(func, path, buf) {
       try {
         var stat = func(path);
+        if (NODEFS.isWindows) {
+          // Node.js on Windows never represents permission bit 'x', so
+          // propagate read bits to execute bits.
+          stat.mode = stat.mode | (stat.mode & 292) >> 2;
+        }
       } catch (e) {
         if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
           return -54;
@@ -67171,6 +67211,11 @@ function init9(RuntimeName, PHPLoader) {
     doStat: function(func, path, buf) {
       try {
         var stat = func(path);
+        if (NODEFS.isWindows) {
+          // Node.js on Windows never represents permission bit 'x', so
+          // propagate read bits to execute bits.
+          stat.mode = stat.mode | (stat.mode & 292) >> 2;
+        }
       } catch (e) {
         if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
           return -54;
